services:
  minio:
    image: minio/minio:latest
    entrypoint: >
      /bin/sh -c "
      minio server /mnt/data --console-address \":9001\" &
      sleep 5;
      /usr/bin/mc alias set myminio http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/roda;
      /usr/bin/mc policy set download myminio/roda;
      wait
      "
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_VOLUMES=/mnt/data
    volumes:
      - minio_data:/mnt/data
    networks:
      - roda-network
    restart: unless-stopped
    ports:
      - 127.0.0.1:9000:9000
  postgres:
    image: pgvector/pgvector:pg18
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - roda-pg:/var/lib/postgresql/data
      - ./priv/repo/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "127.0.0.1:${POSTGRES_PORT}:5432"
  memgraph:
    image: memgraph/memgraph-mage:3.5.2
    container_name: memgraph
    environment:
      MEMGRAPH_USER: ${MEMGRAPH_USER}
      MEMGRAPH_PASSWORD: ${MEMGRAPH_PASSWORD}
    volumes:
      - roda-memgraph:/var/lib/memgraph
    ports:
      - "127.0.0.1:7687:7687"
    networks:
      - roda-network
    restart: unless-stopped

volumes:
  roda-pg:
  minio_data:
  roda-memgraph:

networks:
  roda-network:
    driver: bridge
